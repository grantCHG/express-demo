//
// Autogenerated by Thrift Compiler (0.9.3)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var ttypes = require('./kvservices_types');
//HELPER FUNCTIONS AND STRUCTURES

KVService_cget_args = function(args) {
  this.paramter = null;
  if (args) {
    if (args.paramter !== undefined && args.paramter !== null) {
      this.paramter = new ttypes.GetArgs(args.paramter);
    }
  }
};
KVService_cget_args.prototype = {};
KVService_cget_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.paramter = new ttypes.GetArgs();
        this.paramter.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_cget_args.prototype.write = function(output) {
  output.writeStructBegin('KVService_cget_args');
  if (this.paramter !== null && this.paramter !== undefined) {
    output.writeFieldBegin('paramter', Thrift.Type.STRUCT, 1);
    this.paramter.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_cget_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.GetResult(args.success);
    }
  }
};
KVService_cget_result.prototype = {};
KVService_cget_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.GetResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_cget_result.prototype.write = function(output) {
  output.writeStructBegin('KVService_cget_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_cset_args = function(args) {
  this.paramter = null;
  if (args) {
    if (args.paramter !== undefined && args.paramter !== null) {
      this.paramter = new ttypes.SetArgs(args.paramter);
    }
  }
};
KVService_cset_args.prototype = {};
KVService_cset_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.paramter = new ttypes.SetArgs();
        this.paramter.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_cset_args.prototype.write = function(output) {
  output.writeStructBegin('KVService_cset_args');
  if (this.paramter !== null && this.paramter !== undefined) {
    output.writeFieldBegin('paramter', Thrift.Type.STRUCT, 1);
    this.paramter.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_cset_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.SetResult(args.success);
    }
  }
};
KVService_cset_result.prototype = {};
KVService_cset_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.SetResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_cset_result.prototype.write = function(output) {
  output.writeStructBegin('KVService_cset_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_cdel_args = function(args) {
  this.paramter = null;
  if (args) {
    if (args.paramter !== undefined && args.paramter !== null) {
      this.paramter = new ttypes.DelArgs(args.paramter);
    }
  }
};
KVService_cdel_args.prototype = {};
KVService_cdel_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.paramter = new ttypes.DelArgs();
        this.paramter.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_cdel_args.prototype.write = function(output) {
  output.writeStructBegin('KVService_cdel_args');
  if (this.paramter !== null && this.paramter !== undefined) {
    output.writeFieldBegin('paramter', Thrift.Type.STRUCT, 1);
    this.paramter.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_cdel_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.Result(args.success);
    }
  }
};
KVService_cdel_result.prototype = {};
KVService_cdel_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.Result();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_cdel_result.prototype.write = function(output) {
  output.writeStructBegin('KVService_cdel_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_cMultiGet_args = function(args) {
  this.paramter = null;
  if (args) {
    if (args.paramter !== undefined && args.paramter !== null) {
      this.paramter = new ttypes.BatchGetArgs(args.paramter);
    }
  }
};
KVService_cMultiGet_args.prototype = {};
KVService_cMultiGet_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.paramter = new ttypes.BatchGetArgs();
        this.paramter.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_cMultiGet_args.prototype.write = function(output) {
  output.writeStructBegin('KVService_cMultiGet_args');
  if (this.paramter !== null && this.paramter !== undefined) {
    output.writeFieldBegin('paramter', Thrift.Type.STRUCT, 1);
    this.paramter.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_cMultiGet_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.BatchGetResult(args.success);
    }
  }
};
KVService_cMultiGet_result.prototype = {};
KVService_cMultiGet_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.BatchGetResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_cMultiGet_result.prototype.write = function(output) {
  output.writeStructBegin('KVService_cMultiGet_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_tget_args = function(args) {
  this.paramter = null;
  if (args) {
    if (args.paramter !== undefined && args.paramter !== null) {
      this.paramter = new ttypes.TgetArgs(args.paramter);
    }
  }
};
KVService_tget_args.prototype = {};
KVService_tget_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.paramter = new ttypes.TgetArgs();
        this.paramter.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_tget_args.prototype.write = function(output) {
  output.writeStructBegin('KVService_tget_args');
  if (this.paramter !== null && this.paramter !== undefined) {
    output.writeFieldBegin('paramter', Thrift.Type.STRUCT, 1);
    this.paramter.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_tget_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.TgetResult(args.success);
    }
  }
};
KVService_tget_result.prototype = {};
KVService_tget_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.TgetResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_tget_result.prototype.write = function(output) {
  output.writeStructBegin('KVService_tget_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_tset_args = function(args) {
  this.paramter = null;
  if (args) {
    if (args.paramter !== undefined && args.paramter !== null) {
      this.paramter = new ttypes.TsetArgs(args.paramter);
    }
  }
};
KVService_tset_args.prototype = {};
KVService_tset_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.paramter = new ttypes.TsetArgs();
        this.paramter.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_tset_args.prototype.write = function(output) {
  output.writeStructBegin('KVService_tset_args');
  if (this.paramter !== null && this.paramter !== undefined) {
    output.writeFieldBegin('paramter', Thrift.Type.STRUCT, 1);
    this.paramter.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_tset_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.SetResult(args.success);
    }
  }
};
KVService_tset_result.prototype = {};
KVService_tset_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.SetResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_tset_result.prototype.write = function(output) {
  output.writeStructBegin('KVService_tset_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_tdel_args = function(args) {
  this.paramter = null;
  if (args) {
    if (args.paramter !== undefined && args.paramter !== null) {
      this.paramter = new ttypes.DelArgs(args.paramter);
    }
  }
};
KVService_tdel_args.prototype = {};
KVService_tdel_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.paramter = new ttypes.DelArgs();
        this.paramter.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_tdel_args.prototype.write = function(output) {
  output.writeStructBegin('KVService_tdel_args');
  if (this.paramter !== null && this.paramter !== undefined) {
    output.writeFieldBegin('paramter', Thrift.Type.STRUCT, 1);
    this.paramter.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_tdel_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.Result(args.success);
    }
  }
};
KVService_tdel_result.prototype = {};
KVService_tdel_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.Result();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_tdel_result.prototype.write = function(output) {
  output.writeStructBegin('KVService_tdel_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_tquery_args = function(args) {
  this.paramter = null;
  if (args) {
    if (args.paramter !== undefined && args.paramter !== null) {
      this.paramter = args.paramter;
    }
  }
};
KVService_tquery_args.prototype = {};
KVService_tquery_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.paramter = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_tquery_args.prototype.write = function(output) {
  output.writeStructBegin('KVService_tquery_args');
  if (this.paramter !== null && this.paramter !== undefined) {
    output.writeFieldBegin('paramter', Thrift.Type.STRING, 1);
    output.writeString(this.paramter);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_tquery_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.TqueryResult(args.success);
    }
  }
};
KVService_tquery_result.prototype = {};
KVService_tquery_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.TqueryResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_tquery_result.prototype.write = function(output) {
  output.writeStructBegin('KVService_tquery_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_tqueryc_args = function(args) {
  this.paramter = null;
  if (args) {
    if (args.paramter !== undefined && args.paramter !== null) {
      this.paramter = new ttypes.TqueryArgs(args.paramter);
    }
  }
};
KVService_tqueryc_args.prototype = {};
KVService_tqueryc_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.paramter = new ttypes.TqueryArgs();
        this.paramter.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_tqueryc_args.prototype.write = function(output) {
  output.writeStructBegin('KVService_tqueryc_args');
  if (this.paramter !== null && this.paramter !== undefined) {
    output.writeFieldBegin('paramter', Thrift.Type.STRUCT, 1);
    this.paramter.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_tqueryc_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.TqueryResult(args.success);
    }
  }
};
KVService_tqueryc_result.prototype = {};
KVService_tqueryc_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.TqueryResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_tqueryc_result.prototype.write = function(output) {
  output.writeStructBegin('KVService_tqueryc_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_tMultiGet_args = function(args) {
  this.paramter = null;
  if (args) {
    if (args.paramter !== undefined && args.paramter !== null) {
      this.paramter = new ttypes.TBatchGetArgs(args.paramter);
    }
  }
};
KVService_tMultiGet_args.prototype = {};
KVService_tMultiGet_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.paramter = new ttypes.TBatchGetArgs();
        this.paramter.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_tMultiGet_args.prototype.write = function(output) {
  output.writeStructBegin('KVService_tMultiGet_args');
  if (this.paramter !== null && this.paramter !== undefined) {
    output.writeFieldBegin('paramter', Thrift.Type.STRUCT, 1);
    this.paramter.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_tMultiGet_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.TBatchGetResult(args.success);
    }
  }
};
KVService_tMultiGet_result.prototype = {};
KVService_tMultiGet_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.TBatchGetResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_tMultiGet_result.prototype.write = function(output) {
  output.writeStructBegin('KVService_tMultiGet_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_check_args = function(args) {
};
KVService_check_args.prototype = {};
KVService_check_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_check_args.prototype.write = function(output) {
  output.writeStructBegin('KVService_check_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVService_check_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
KVService_check_result.prototype = {};
KVService_check_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

KVService_check_result.prototype.write = function(output) {
  output.writeStructBegin('KVService_check_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

KVServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
KVServiceClient.prototype = {};
KVServiceClient.prototype.seqid = function() { return this._seqid; }
KVServiceClient.prototype.new_seqid = function() { return this._seqid += 1; }
KVServiceClient.prototype.cget = function(paramter, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_cget(paramter);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_cget(paramter);
  }
};

KVServiceClient.prototype.send_cget = function(paramter) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('cget', Thrift.MessageType.CALL, this.seqid());
  var args = new KVService_cget_args();
  args.paramter = paramter;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

KVServiceClient.prototype.recv_cget = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new KVService_cget_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('cget failed: unknown result');
};
KVServiceClient.prototype.cset = function(paramter, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_cset(paramter);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_cset(paramter);
  }
};

KVServiceClient.prototype.send_cset = function(paramter) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('cset', Thrift.MessageType.CALL, this.seqid());
  var args = new KVService_cset_args();
  args.paramter = paramter;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

KVServiceClient.prototype.recv_cset = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new KVService_cset_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('cset failed: unknown result');
};
KVServiceClient.prototype.cdel = function(paramter, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_cdel(paramter);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_cdel(paramter);
  }
};

KVServiceClient.prototype.send_cdel = function(paramter) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('cdel', Thrift.MessageType.CALL, this.seqid());
  var args = new KVService_cdel_args();
  args.paramter = paramter;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

KVServiceClient.prototype.recv_cdel = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new KVService_cdel_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('cdel failed: unknown result');
};
KVServiceClient.prototype.cMultiGet = function(paramter, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_cMultiGet(paramter);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_cMultiGet(paramter);
  }
};

KVServiceClient.prototype.send_cMultiGet = function(paramter) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('cMultiGet', Thrift.MessageType.CALL, this.seqid());
  var args = new KVService_cMultiGet_args();
  args.paramter = paramter;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

KVServiceClient.prototype.recv_cMultiGet = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new KVService_cMultiGet_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('cMultiGet failed: unknown result');
};
KVServiceClient.prototype.tget = function(paramter, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_tget(paramter);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_tget(paramter);
  }
};

KVServiceClient.prototype.send_tget = function(paramter) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('tget', Thrift.MessageType.CALL, this.seqid());
  var args = new KVService_tget_args();
  args.paramter = paramter;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

KVServiceClient.prototype.recv_tget = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new KVService_tget_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('tget failed: unknown result');
};
KVServiceClient.prototype.tset = function(paramter, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_tset(paramter);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_tset(paramter);
  }
};

KVServiceClient.prototype.send_tset = function(paramter) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('tset', Thrift.MessageType.CALL, this.seqid());
  var args = new KVService_tset_args();
  args.paramter = paramter;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

KVServiceClient.prototype.recv_tset = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new KVService_tset_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('tset failed: unknown result');
};
KVServiceClient.prototype.tdel = function(paramter, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_tdel(paramter);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_tdel(paramter);
  }
};

KVServiceClient.prototype.send_tdel = function(paramter) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('tdel', Thrift.MessageType.CALL, this.seqid());
  var args = new KVService_tdel_args();
  args.paramter = paramter;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

KVServiceClient.prototype.recv_tdel = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new KVService_tdel_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('tdel failed: unknown result');
};
KVServiceClient.prototype.tquery = function(paramter, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_tquery(paramter);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_tquery(paramter);
  }
};

KVServiceClient.prototype.send_tquery = function(paramter) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('tquery', Thrift.MessageType.CALL, this.seqid());
  var args = new KVService_tquery_args();
  args.paramter = paramter;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

KVServiceClient.prototype.recv_tquery = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new KVService_tquery_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('tquery failed: unknown result');
};
KVServiceClient.prototype.tqueryc = function(paramter, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_tqueryc(paramter);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_tqueryc(paramter);
  }
};

KVServiceClient.prototype.send_tqueryc = function(paramter) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('tqueryc', Thrift.MessageType.CALL, this.seqid());
  var args = new KVService_tqueryc_args();
  args.paramter = paramter;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

KVServiceClient.prototype.recv_tqueryc = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new KVService_tqueryc_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('tqueryc failed: unknown result');
};
KVServiceClient.prototype.tMultiGet = function(paramter, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_tMultiGet(paramter);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_tMultiGet(paramter);
  }
};

KVServiceClient.prototype.send_tMultiGet = function(paramter) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('tMultiGet', Thrift.MessageType.CALL, this.seqid());
  var args = new KVService_tMultiGet_args();
  args.paramter = paramter;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

KVServiceClient.prototype.recv_tMultiGet = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new KVService_tMultiGet_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('tMultiGet failed: unknown result');
};
KVServiceClient.prototype.check = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_check();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_check();
  }
};

KVServiceClient.prototype.send_check = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('check', Thrift.MessageType.CALL, this.seqid());
  var args = new KVService_check_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

KVServiceClient.prototype.recv_check = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new KVService_check_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('check failed: unknown result');
};
KVServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
KVServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

KVServiceProcessor.prototype.process_cget = function(seqid, input, output) {
  var args = new KVService_cget_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.cget.length === 1) {
    Q.fcall(this._handler.cget, args.paramter)
      .then(function(result) {
        var result = new KVService_cget_result({success: result});
        output.writeMessageBegin("cget", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("cget", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.cget(args.paramter, function (err, result) {
      if (err == null) {
        var result = new KVService_cget_result((err != null ? err : {success: result}));
        output.writeMessageBegin("cget", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("cget", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

KVServiceProcessor.prototype.process_cset = function(seqid, input, output) {
  var args = new KVService_cset_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.cset.length === 1) {
    Q.fcall(this._handler.cset, args.paramter)
      .then(function(result) {
        var result = new KVService_cset_result({success: result});
        output.writeMessageBegin("cset", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("cset", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.cset(args.paramter, function (err, result) {
      if (err == null) {
        var result = new KVService_cset_result((err != null ? err : {success: result}));
        output.writeMessageBegin("cset", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("cset", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

KVServiceProcessor.prototype.process_cdel = function(seqid, input, output) {
  var args = new KVService_cdel_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.cdel.length === 1) {
    Q.fcall(this._handler.cdel, args.paramter)
      .then(function(result) {
        var result = new KVService_cdel_result({success: result});
        output.writeMessageBegin("cdel", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("cdel", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.cdel(args.paramter, function (err, result) {
      if (err == null) {
        var result = new KVService_cdel_result((err != null ? err : {success: result}));
        output.writeMessageBegin("cdel", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("cdel", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

KVServiceProcessor.prototype.process_cMultiGet = function(seqid, input, output) {
  var args = new KVService_cMultiGet_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.cMultiGet.length === 1) {
    Q.fcall(this._handler.cMultiGet, args.paramter)
      .then(function(result) {
        var result = new KVService_cMultiGet_result({success: result});
        output.writeMessageBegin("cMultiGet", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("cMultiGet", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.cMultiGet(args.paramter, function (err, result) {
      if (err == null) {
        var result = new KVService_cMultiGet_result((err != null ? err : {success: result}));
        output.writeMessageBegin("cMultiGet", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("cMultiGet", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

KVServiceProcessor.prototype.process_tget = function(seqid, input, output) {
  var args = new KVService_tget_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.tget.length === 1) {
    Q.fcall(this._handler.tget, args.paramter)
      .then(function(result) {
        var result = new KVService_tget_result({success: result});
        output.writeMessageBegin("tget", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("tget", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.tget(args.paramter, function (err, result) {
      if (err == null) {
        var result = new KVService_tget_result((err != null ? err : {success: result}));
        output.writeMessageBegin("tget", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("tget", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

KVServiceProcessor.prototype.process_tset = function(seqid, input, output) {
  var args = new KVService_tset_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.tset.length === 1) {
    Q.fcall(this._handler.tset, args.paramter)
      .then(function(result) {
        var result = new KVService_tset_result({success: result});
        output.writeMessageBegin("tset", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("tset", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.tset(args.paramter, function (err, result) {
      if (err == null) {
        var result = new KVService_tset_result((err != null ? err : {success: result}));
        output.writeMessageBegin("tset", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("tset", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

KVServiceProcessor.prototype.process_tdel = function(seqid, input, output) {
  var args = new KVService_tdel_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.tdel.length === 1) {
    Q.fcall(this._handler.tdel, args.paramter)
      .then(function(result) {
        var result = new KVService_tdel_result({success: result});
        output.writeMessageBegin("tdel", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("tdel", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.tdel(args.paramter, function (err, result) {
      if (err == null) {
        var result = new KVService_tdel_result((err != null ? err : {success: result}));
        output.writeMessageBegin("tdel", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("tdel", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

KVServiceProcessor.prototype.process_tquery = function(seqid, input, output) {
  var args = new KVService_tquery_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.tquery.length === 1) {
    Q.fcall(this._handler.tquery, args.paramter)
      .then(function(result) {
        var result = new KVService_tquery_result({success: result});
        output.writeMessageBegin("tquery", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("tquery", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.tquery(args.paramter, function (err, result) {
      if (err == null) {
        var result = new KVService_tquery_result((err != null ? err : {success: result}));
        output.writeMessageBegin("tquery", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("tquery", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

KVServiceProcessor.prototype.process_tqueryc = function(seqid, input, output) {
  var args = new KVService_tqueryc_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.tqueryc.length === 1) {
    Q.fcall(this._handler.tqueryc, args.paramter)
      .then(function(result) {
        var result = new KVService_tqueryc_result({success: result});
        output.writeMessageBegin("tqueryc", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("tqueryc", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.tqueryc(args.paramter, function (err, result) {
      if (err == null) {
        var result = new KVService_tqueryc_result((err != null ? err : {success: result}));
        output.writeMessageBegin("tqueryc", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("tqueryc", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

KVServiceProcessor.prototype.process_tMultiGet = function(seqid, input, output) {
  var args = new KVService_tMultiGet_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.tMultiGet.length === 1) {
    Q.fcall(this._handler.tMultiGet, args.paramter)
      .then(function(result) {
        var result = new KVService_tMultiGet_result({success: result});
        output.writeMessageBegin("tMultiGet", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("tMultiGet", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.tMultiGet(args.paramter, function (err, result) {
      if (err == null) {
        var result = new KVService_tMultiGet_result((err != null ? err : {success: result}));
        output.writeMessageBegin("tMultiGet", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("tMultiGet", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

KVServiceProcessor.prototype.process_check = function(seqid, input, output) {
  var args = new KVService_check_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.check.length === 0) {
    Q.fcall(this._handler.check)
      .then(function(result) {
        var result = new KVService_check_result({success: result});
        output.writeMessageBegin("check", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("check", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.check(function (err, result) {
      if (err == null) {
        var result = new KVService_check_result((err != null ? err : {success: result}));
        output.writeMessageBegin("check", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("check", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

