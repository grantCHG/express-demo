//
// Autogenerated by Thrift Compiler (0.9.3)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var ttypes = module.exports = {};
ResStarSearch = module.exports.ResStarSearch = function(args) {
  this.responseCode = null;
  this.responseDesp = null;
  this.data = null;
  if (args) {
    if (args.responseCode !== undefined && args.responseCode !== null) {
      this.responseCode = args.responseCode;
    }
    if (args.responseDesp !== undefined && args.responseDesp !== null) {
      this.responseDesp = args.responseDesp;
    }
    if (args.data !== undefined && args.data !== null) {
      this.data = Thrift.copyList(args.data, [null]);
    }
  }
};
ResStarSearch.prototype = {};
ResStarSearch.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.responseCode = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.responseDesp = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.data = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new ttypes.StarSearchVO();
          elem6.read(input);
          this.data.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ResStarSearch.prototype.write = function(output) {
  output.writeStructBegin('ResStarSearch');
  if (this.responseCode !== null && this.responseCode !== undefined) {
    output.writeFieldBegin('responseCode', Thrift.Type.STRING, 1);
    output.writeString(this.responseCode);
    output.writeFieldEnd();
  }
  if (this.responseDesp !== null && this.responseDesp !== undefined) {
    output.writeFieldBegin('responseDesp', Thrift.Type.STRING, 2);
    output.writeString(this.responseDesp);
    output.writeFieldEnd();
  }
  if (this.data !== null && this.data !== undefined) {
    output.writeFieldBegin('data', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRUCT, this.data.length);
    for (var iter7 in this.data)
    {
      if (this.data.hasOwnProperty(iter7))
      {
        iter7 = this.data[iter7];
        iter7.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

StarSearchVO = module.exports.StarSearchVO = function(args) {
  this.kugouId = null;
  this.roomId = null;
  this.roomName = null;
  this.imgPath = null;
  this.nickName = null;
  this.onlineState = null;
  this.starLevel = null;
  this.starttime = null;
  this.endTime = null;
  this.isHifi = null;
  this.isOriginal = null;
  if (args) {
    if (args.kugouId !== undefined && args.kugouId !== null) {
      this.kugouId = args.kugouId;
    }
    if (args.roomId !== undefined && args.roomId !== null) {
      this.roomId = args.roomId;
    }
    if (args.roomName !== undefined && args.roomName !== null) {
      this.roomName = args.roomName;
    }
    if (args.imgPath !== undefined && args.imgPath !== null) {
      this.imgPath = args.imgPath;
    }
    if (args.nickName !== undefined && args.nickName !== null) {
      this.nickName = args.nickName;
    }
    if (args.onlineState !== undefined && args.onlineState !== null) {
      this.onlineState = args.onlineState;
    }
    if (args.starLevel !== undefined && args.starLevel !== null) {
      this.starLevel = args.starLevel;
    }
    if (args.starttime !== undefined && args.starttime !== null) {
      this.starttime = args.starttime;
    }
    if (args.endTime !== undefined && args.endTime !== null) {
      this.endTime = args.endTime;
    }
    if (args.isHifi !== undefined && args.isHifi !== null) {
      this.isHifi = args.isHifi;
    }
    if (args.isOriginal !== undefined && args.isOriginal !== null) {
      this.isOriginal = args.isOriginal;
    }
  }
};
StarSearchVO.prototype = {};
StarSearchVO.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.kugouId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.roomId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.roomName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.imgPath = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.nickName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.onlineState = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.starLevel = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.I64) {
        this.starttime = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.I64) {
        this.endTime = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 10:
      if (ftype == Thrift.Type.I32) {
        this.isHifi = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 11:
      if (ftype == Thrift.Type.I32) {
        this.isOriginal = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

StarSearchVO.prototype.write = function(output) {
  output.writeStructBegin('StarSearchVO');
  if (this.kugouId !== null && this.kugouId !== undefined) {
    output.writeFieldBegin('kugouId', Thrift.Type.I64, 1);
    output.writeI64(this.kugouId);
    output.writeFieldEnd();
  }
  if (this.roomId !== null && this.roomId !== undefined) {
    output.writeFieldBegin('roomId', Thrift.Type.I32, 2);
    output.writeI32(this.roomId);
    output.writeFieldEnd();
  }
  if (this.roomName !== null && this.roomName !== undefined) {
    output.writeFieldBegin('roomName', Thrift.Type.STRING, 3);
    output.writeString(this.roomName);
    output.writeFieldEnd();
  }
  if (this.imgPath !== null && this.imgPath !== undefined) {
    output.writeFieldBegin('imgPath', Thrift.Type.STRING, 4);
    output.writeString(this.imgPath);
    output.writeFieldEnd();
  }
  if (this.nickName !== null && this.nickName !== undefined) {
    output.writeFieldBegin('nickName', Thrift.Type.STRING, 5);
    output.writeString(this.nickName);
    output.writeFieldEnd();
  }
  if (this.onlineState !== null && this.onlineState !== undefined) {
    output.writeFieldBegin('onlineState', Thrift.Type.I32, 6);
    output.writeI32(this.onlineState);
    output.writeFieldEnd();
  }
  if (this.starLevel !== null && this.starLevel !== undefined) {
    output.writeFieldBegin('starLevel', Thrift.Type.STRING, 7);
    output.writeString(this.starLevel);
    output.writeFieldEnd();
  }
  if (this.starttime !== null && this.starttime !== undefined) {
    output.writeFieldBegin('starttime', Thrift.Type.I64, 8);
    output.writeI64(this.starttime);
    output.writeFieldEnd();
  }
  if (this.endTime !== null && this.endTime !== undefined) {
    output.writeFieldBegin('endTime', Thrift.Type.I64, 9);
    output.writeI64(this.endTime);
    output.writeFieldEnd();
  }
  if (this.isHifi !== null && this.isHifi !== undefined) {
    output.writeFieldBegin('isHifi', Thrift.Type.I32, 10);
    output.writeI32(this.isHifi);
    output.writeFieldEnd();
  }
  if (this.isOriginal !== null && this.isOriginal !== undefined) {
    output.writeFieldBegin('isOriginal', Thrift.Type.I32, 11);
    output.writeI32(this.isOriginal);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

